@INPROCEEDINGS{fdip,
  author={Reinman, G. and others},
  booktitle={MICRO'99}, 
  title={Fetch directed instruction prefetching}, 
  year={1999},
  volume={},
  number={}
}


@INPROCEEDINGS{boomerang,
  author={Kumar, Rakesh and others},
  booktitle={HPCA'17}, 
  title={Boomerang: A Metadata-Free Architecture for Control Flow Delivery}, 
  year={2017},
  volume={},
  number={}
}

@inproceedings{shotgun,
author = {Kumar, Rakesh and others},
title = {Blasting through the Front-End Bottleneck with Shotgun},
year = {2018},
isbn = {9781450349116},
booktitle = {ASPLOS'18},
keywords = {BTB organization, control flow, prefeteching, branch target buffer (btb), instruction cache, servers}
}

@inproceedings{tifs,
 author = {Ferdman, Michael and others},
 title = "{Temporal Instruction Fetch Streaming}",
 booktitle = {Micro'08},
 year = {2008}
} 

@inproceedings{pif,
 author = {Ferdman, Michael and others},
 title = "{Proactive Instruction Fetch}",
 booktitle = {International Symposium on Microarchitecture},
 year = {2011}
} 

@inproceedings{shift,
 author = {Kaynak, Cansu and others},
 title = "{SHIFT: Shared History Instruction Fetch for Lean-core Server Processors}",
 booktitle = {International Symposium on Microarchitecture},
 year = {2013}
} 

@misc{ipc1,
 title = {1st {I}nstruction {P}refetching {C}hampionship}, 
 year = {.},
 note = {\url{https://research.ece.ncsu.edu/ipc/}}
} 

@misc{champsim,
 author={},
 title = {Champ{S}im {S}imulator},
 booktitle = {},
 year = {.},
 note = {\url{https://github.com/ChampSim/ChampSim}}
} 

@misc{sunnycove,
 title = {Ice Lake processors}, 
 year = {.},
 note = {\url{https://www.anandtech.com/show/14514/examining-intels-ice-lake-microarchitecture-and-sunny-cove/3}}
} 

@inproceedings{rebase_old,
  author={Y. {Ishii} and others},
  booktitle={IEEE Computer Architecture Letters}, 
  title={Rebasing Instruction Prefetching: An Industry Perspective}, 
  year={2020},
  doi={10.1109/LCA.2020.3035068}}
  
@ARTICLE{zen2,
  author={Suggs, David and others},
  journal={IEEE Micro}, 
  title={The {AMD} “Zen 2” Processor}, 
  year={2020},
  volume={40},
  number={2}
}

  
@ARTICLE{neoverse,
  author={Pellegrini, Andrea and others},
  journal={IEEE Micro}, 
  title={The Arm Neoverse N1 Platform: Building Blocks for the Next-Gen Cloud-to-Edge Infrastructure SoC}, 
  year={2020},
  volume={40},
  number={2}
}

@INPROCEEDINGS{exynos,
  author={Grayson, B. and others},
  booktitle={ISCA'20}, 
  title={Evolution of the Samsung Exynos CPU Microarchitecture}, 
  year={2020},
  volume={},
  number={}}
}

@INPROCEEDINGS{IBMz,
  author={Bonanno, James and others},
  booktitle={HPCA'13}, 
  title={Two level bulk preload branch prediction}, 
  year={2013},
  volume={},
  number={}
}

@inproceedings{IBMz15ISCA,
author = {Adiga, Narasimha and others},
title = {The {IBM} Zl5 High Frequency Mainframe Branch Predictor},
year = {2020},
booktitle = {Proceedings of the ACM/IEEE 47th Annual International Symposium on Computer Architecture},
series = {ISCA '20}
}

@inproceedings{IBMz15HotChips,
author = {Anthony Saporito},
title = {The {IBM} z15 processor chip set},
year = {2020},
booktitle = {Hot Chips}
}

@INPROCEEDINGS{rebase,
  author={Ishii, Yasuo and others},
  booktitle={ISPASS'21}, 
  title={Re-establishing Fetch-Directed Instruction Prefetching: An Industry Perspective}, 
  year={2021},
  volume={},
  number={}
}

@inproceedings{bbtb,
author = {Yeh, Tse-Yu and Patt, Yale N.},
title = {A Comprehensive Instruction Fetch Mechanism for a Processor Supporting Speculative Execution},
year = {1992},
isbn = {0818631759},
publisher = {IEEE Computer Society Press},
address = {Washington, DC, USA},
booktitle = {Proceedings of the 25th Annual International Symposium on Microarchitecture},
pages = {129–139},
numpages = {11},
location = {Portland, Oregon, USA},
series = {MICRO 25}
}

@INPROCEEDINGS{confluence,
  author={Kaynak, Cansu and Grot, Boris and Falsafi, Babak},
  booktitle={2015 48th Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)}, 
  title={Confluence: Unified instruction supply for scale-out servers}, 
  year={2015},
  volume={},
  number={},
  pages={166-177},
  doi={10.1145/2830772.2830785}
}

@misc{amdbtb,
title = {{AMD} Software Optimization Guide. {S}ection 2.8.1.2},
note = {\url{https://www.amd.com/system/files/TechDocs/56665.zip}}
}

@INPROCEEDINGS{cacti,
  author={Li, Sheng and Chen, Ke and Ahn, Jung Ho and Brockman, Jay B. and Jouppi, Norman P.},
  booktitle={2011 IEEE/ACM International Conference on Computer-Aided Design (ICCAD)}, 
  title={CACTI-P: Architecture-level modeling for SRAM-based structures with advanced leakage reduction techniques}, 
  year={2011},
  volume={},
  number={},
  pages={694-701},
  doi={10.1109/ICCAD.2011.6105405}}


@article{fagin1997partial,
  title={Partial resolution in branch target buffers},
  author={Fagin, Barry},
  journal={IEEE Transactions on Computers},
  volume={46},
  number={10},
  pages={1142--1145},
  year={1997},
  publisher={IEEE}
}


@article{butler2011bulldozer,
  title={Bulldozer: An approach to multithreaded compute performance},
  author={Butler, Michael and Barnes, Leslie and Sarma, Debjit Das and Gelinas, Bob},
  journal={IEEE Micro},
  volume={31},
  number={2},
  pages={6--15},
  year={2011},
  publisher={IEEE}
}

@inproceedings{jimenez2000impact,
  title={The impact of delay on the design of branch predictors},
  author={Jim{\'e}nez, Daniel A and Keckler, Stephen W and Lin, Calvin},
  booktitle={Proceedings of the 33rd annual ACM/IEEE international symposium on Microarchitecture},
  pages={67--76},
  year={2000}
}


@article{perleberg1993branch,
  title={Branch target buffer design and optimization},
  author={Perleberg, Chris H and Smith, Alan Jay},
  journal={IEEE transactions on computers},
  volume={42},
  number={4},
  pages={396--412},
  year={1993},
  publisher={IEEE}
}

@article{seznec2002design,
  title={Design tradeoffs for the Alpha EV8 conditional branch predictor},
  author={Seznec, Andr{\'e} and Felix, Stephen and Krishnan, Venkata and Sazeides, Yiannakis},
  journal={ACM SIGARCH Computer Architecture News},
  volume={30},
  number={2},
  pages={295--306},
  year={2002},
  publisher={ACM New York, NY, USA}
}

@article{burcea2009phantom,
  title={Phantom-btb: a virtualized branch target buffer design},
  author={Burcea, Ioana and Moshovos, Andreas},
  journal={Acm Sigplan Notices},
  volume={44},
  number={3},
  pages={313--324},
  year={2009},
  publisher={ACM New York, NY, USA}
}


@inproceedings{ansari2020divide,
  title={Divide and conquer frontend bottleneck},
  author={Ansari, Ali and Lotfi-Kamran, Pejman and Sarbazi-Azad, Hamid},
  booktitle={2020 ACM/IEEE 47th Annual International Symposium on Computer Architecture (ISCA)},
  pages={65--78},
  year={2020},
  organization={IEEE}
}

@inproceedings{chen2016autofdo,
  title={AutoFDO: Automatic feedback-directed optimization for warehouse-scale applications},
  author={Chen, Dehao and Moseley, Tipp and Li, David Xinliang},
  booktitle={2016 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={12--23},
  year={2016},
  organization={IEEE}
}

@inproceedings{li2010lightweight,
  title={Lightweight feedback-directed cross-module optimization},
  author={Li, David Xinliang and Ashok, Raksit and Hundt, Robert},
  booktitle={Proceedings of the 8th annual IEEE/ACM international symposium on Code generation and optimization},
  pages={53--61},
  year={2010}
}

@inproceedings{ottoni2017optimizing,
  title={Optimizing function placement for large-scale data-center applications},
  author={Ottoni, Guilherme and Maher, Bertrand},
  booktitle={2017 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={233--244},
  year={2017},
  organization={IEEE}
}

@inproceedings{luk2004ispike,
  title={Ispike: a post-link optimizer for the intel/spl reg/itanium/spl reg/architecture},
  author={Luk, C-K and Muth, Robert and Patil, Harish and Cohn, Robert and Lowney, Geoff},
  booktitle={International Symposium on Code Generation and Optimization, 2004. CGO 2004.},
  pages={15--26},
  year={2004},
  organization={IEEE}
}

@inproceedings{panchenko2019bolt,
  title={Bolt: a practical binary optimizer for data centers and beyond},
  author={Panchenko, Maksim and Auler, Rafael and Nell, Bill and Ottoni, Guilherme},
  booktitle={2019 IEEE/ACM International Symposium on Code Generation and Optimization (CGO)},
  pages={2--14},
  year={2019},
  organization={IEEE}
}

@inproceedings{luk1998cooperative,
  title={Cooperative prefetching: Compiler and hardware support for effective instruction prefetching in modern processors},
  author={Luk, Chi-Keung and Mowry, Todd C},
  booktitle={Proceedings. 31st Annual ACM/IEEE International Symposium on Microarchitecture},
  pages={182--193},
  year={1998},
  organization={IEEE}
}


@article{annavaram2003call,
  title={Call graph prefetching for database applications},
  author={Annavaram, Murali and Patel, Jignesh M and Davidson, Edward S},
  journal={ACM Transactions on Computer Systems (TOCS)},
  volume={21},
  number={4},
  pages={412--444},
  year={2003},
  publisher={ACM New York, NY, USA}
}


@inproceedings{ayers2019asmdb,
  title={Asmdb: understanding and mitigating front-end stalls in warehouse-scale computers},
  author={Ayers, Grant and Nagendra, Nayana Prasad and August, David I and Cho, Hyoun Kyu and Kanev, Svilen and Kozyrakis, Christos and Krishnamurthy, Trivikram and Litz, Heiner and Moseley, Tipp and Ranganathan, Parthasarathy},
  booktitle={Proceedings of the 46th International Symposium on Computer Architecture},
  pages={462--473},
  year={2019}
}

@inproceedings{khan2020spy,
  title={I-spy: Context-driven conditional instruction prefetching with coalescing},
  author={Khan, Tanvir Ahmed and Sriraman, Akshitha and Devietti, Joseph and Pokam, Gilles and Litz, Heiner and Kasikci, Baris},
  booktitle={2020 53rd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO)},
  pages={146--159},
  year={2020},
  organization={IEEE}
}

@article{rupley2018samsung,
  title={{Samsung exynos M3 processor}},
  author={Rupley, J},
  journal={IEEE Hot Chips},
  volume={30},
  year={2018}
}

@inproceedings{profileWarehouse,
author = {Kanev, Svilen and others},
title = {Profiling a Warehouse-Scale Computer},
year = {2015},
isbn = {9781450334020},
booktitle = {ISCA'15}
}

@ARTICLE{btb,
  author={Lee and Smith},
  journal={Computer}, 
  title={Branch Prediction Strategies and Branch Target Buffer Design}, 
  year={1984},
  volume={17},
  number={1},
  pages={6-22},
  doi={10.1109/MC.1984.1658927}
}

@ARTICLE{losq,
  author={J. Losq},
  journal={IBM Tech. Disclosure Bull}, 
  title={“Generalized history table for branch prediction (in pipeline computers)}, 
  year={1982},
  volume={1},
}

@inproceedings{fbtb,
author = {Reinman, Glenn and Austin, Todd and Calder, Brad},
title = {A Scalable Front-End Architecture for Fast Instruction Delivery},
year = {1999},
isbn = {0769501702},
publisher = {IEEE Computer Society},
address = {USA},
url = {https://doi.org/10.1145/300979.300999},
doi = {10.1145/300979.300999},
booktitle = {Proceedings of the 26th Annual International Symposium on Computer Architecture},
pages = {234–245},
numpages = {12},
location = {Atlanta, Georgia, USA},
series = {ISCA '99}
}

@inproceedings{pdede,
  author =       {Soundararajan, Niranjan K and Braun, Peter and Khan,
                  Tanvir Ahmed and Kasikci, Baris and Litz, Heiner and
                  Subramoney, Sreenivas},
  title =        {PDede: Partitioned, Deduplicated, Delta Branch
                  Target Buffer},
  booktitle =    {MICRO-54: 54th Annual IEEE/ACM International
                  Symposium on Microarchitecture},
  year =         {2021},
  pages =        {779-791},
  doi =          {10.1145/3466752.3480046},
  url =          {https://doi.org/10.1145/3466752.3480046},
  abstract =     {Due to large instruction footprints, contemporary
                  data center applications suffer from frequent
                  frontend stalls. Despite being a significant
                  contributor to these stalls, the Branch Target
                  Buffer (BTB) has received less attention compared to
                  other frontend structures such as the instruction
                  cache. While prior works have looked at enhancing
                  the BTB through more efficient replacement policies
                  and prefetching policies, a thorough analysis into
                  optimizing the BTB's storage efficiency is
                  missing. In this work, we analyze BTB accesses for a
                  large number (100+) of frontend bound applications
                  to understand their branch target
                  characteristics. This analysis, provides three
                  significant observations about the nature of branch
                  targets: (1) a significant number of branch
                  instructions have the same branch target, (2) a
                  significant number of branch targets share the same
                  page address, and (3) a significant percentage of
                  branch instructions and their targets are located on
                  the same page. Furthermore, we observe that while
                  applications' address spaces are sparsely populated,
                  they exhibit spatial locality within and across
                  pages. We refer to these multi-page addresses as
                  regions and we show that applications traverse a
                  significantly smaller number of regions than
                  pages. Based on these insights, we propose PDede, an
                  efficient re-design of the BTB micro-architecture
                  that improves storage efficiency by removing
                  redundancy among branches and their targets. PDede
                  introduces three techniques, (a) BTB Partitioning,
                  (b) Branch Target Deduplication, and (c) Delta
                  Branch Target Encoding to reduce BTB miss induced
                  frontend stalls. We evaluate PDede across 100+
                  applications, spanning several usage scenarios, and
                  show that it provides an average 14.4\% (up to 76\%)
                  IPC speedup by reducing BTB misses by 54.7\% on
                  average (and up to 99.8\%).},
  address =      {New York, NY, USA},
  isbn =         {9781450385572},
  keywords =     {Superscalar cores, Branch Target Buffer,
                  Performance},
  location =     {Virtual Event, Greece},
  numpages =     {13},
  publisher =    {Association for Computing Machinery},
  series =       {MICRO '21},
}

@inproceedings{DUPN,
author = {Seznec, Andr\'{e}},
title = {Don't Use the Page Number, but a Pointer to It},
year = {1996},
isbn = {0897917863},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/232973.232985},
doi = {10.1145/232973.232985},
booktitle = {Proceedings of the 23rd Annual International Symposium on Computer Architecture},
pages = {104–113},
numpages = {10},
keywords = {address width, indirect-tagged caches, tag implementation cost, reduced branch target buffers},
location = {Philadelphia, Pennsylvania, USA},
series = {ISCA '96}
}

@article{ittage,
  author    = {Andr{\'{e}} Seznec},
  title     = {A 64-Kbytes ITTAGE indirect branch predictor},
  journal   = {J. Instruction-Level Parallelism},
  year      = {2011},
}

@InProceedings{jan,
author="Hoogerbrugge, Jan",
title="Cost-Efficient Branch Target Buffers",
booktitle="Euro-Par 2000 Parallel Processing",
year="2000",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="950--959",
abstract="Branch target buffers (BTBs) are caches in which branch information is stored that is used for branch prediction by the fetch stage of the instruction pipeline. A typical BTB requires a few kbyte of storage which makes it rather large and, because it is accessed every cycle, rather power consuming. Partial resolution has in the past been proposed to reduce the size of a BTB. A partial resolution BTB stores not all tag bits that would be required to do an exact lookup. The result is a smaller BTB at the price of slightly less accurate branch prediction. This paper proposes to make use of branch locality to reduce the size of a BTB. Short-distance branches need fewer BTB bits than long-distance branches that are less frequent. Two BTB organisations are presented that use branch locality. Simulation results are given that demonstrate the effectiveness of the described techniques.",
isbn="978-3-540-44520-3"
}

@INPROCEEDINGS{ibmBTB,
  author={J. Bonanno and A. Collura and D. Lipetz and U. Mayer and B. Prasky and A. Saporito}, 
  booktitle={International Symposium on High-Performance Computer Architecture}, 
  title="{Two Level Bulk Preload Branch Prediction}", 
  year={2013}, 
  pages={71-82}, 
}

@inproceedings{phantom,
  author    = {Ioana Burcea and
               Andreas Moshovos},
  title     = {Phantom-BTB: a virtualized branch target buffer design},
  booktitle = {Proceedings of the 14th International Conference on Architectural
               Support for Programming Languages and Operating Systems, {ASPLOS}
               2009, Washington, DC, USA, March 7-11, 2009},
  pages     = {313--324},
  year      = {2009},
  url       = {http://doi.acm.org/10.1145/1508244.1508281},
  doi       = {10.1145/1508244.1508281},
  timestamp = {Tue, 24 Mar 2009 08:30:02 +0100},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/asplos/BurceaM09},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@inproceedings{twig,
author = {Khan, T. A. and others},
title = {Twig: Profile-Guided BTB Prefetching for Data Center Applications},
year = {2021},
booktitle = {MICRO'21}
}

@inproceedings{microbtb,
author = {Gupta, Vishal and Panda, Biswabandan},
title = {Micro BTB: A High Performance and Storage Efficient Last-Level Branch Target Buffer for Servers},
year = {2022},
isbn = {9781450393386},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3528416.3530224},
doi = {10.1145/3528416.3530224},
booktitle = {Proceedings of the 19th ACM International Conference on Computing Frontiers},
pages = {12–20},
numpages = {9},
keywords = {performance, superscalar cores, branch target buffer},
location = {Turin, Italy},
series = {CF '22}
}